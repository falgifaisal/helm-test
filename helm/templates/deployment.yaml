apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 1
  labels:
    app: falgi
  name: falgi
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: falgi
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: falgi
    spec:
#      affinity:
#        nodeAffinity:
#          requiredDuringSchedulingIgnoredDuringExecution:
#            nodeSelectorTerms:
#            - matchExpressions:
#              - key: true
#                operator: In
#                values:
#                - app-deployment
#              - key: false
#                operator: In
#                values:
#                - db-deployment
#                - monitoring-deployment
      containers:
      - image: {{ .Values.repositoryImage }}/ikan-id:v.1.0
        imagePullPolicy: Always
        name: falgi
        ports:
        - containerPort: {{ .Values.servicesPort }}
        env:
          - name: PORT
            value: "{{ .Values.servicesPort }}"
        resources: 
          requests:
            cpu: {{ .Values.requestCpu }}
            memory: {{ .Values.requestMemory }}
          limits:
            cpu: {{ .Values.limitsCpu }}
            memory: {{ .Values.limitsMemory }}
        livenessProbe:
          httpGet:
            path: /api/area
            port: {{ .Values.servicesPort }}
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 2
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status: {}

